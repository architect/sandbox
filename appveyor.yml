# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# this is overwritten during `install` phase below
version: 1.0.{build}

skip_tags: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
#image: Visual Studio 2017
platform: Any CPU

# for full list of available versions on appveyor see:
# https://www.appveyor.com/docs/windows-images-software/
environment:
  nodejs_version: "10"
  PYTHON: "C:\\Python36-x64"
  PYTHON_VERSION: "3.6.4"
  PYTHON_ARCH: "64"
  RUBY: "C:\\Ruby25-x64"

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: c:\projects\sandbox

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 5                      # clone entire repository history if not defined

# build cache to preserve files/folders between builds
cache:
  - node_modules                    # local npm modules

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js
  - ps: Install-Product node $env:nodejs_version
  - set PATH=%RUBY%\\bin;%PATH%
  - set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  # Set the appveyor version to match whats in package.json
  - ps: $env:package_version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
  - ps: Update-AppveyorBuild -Version "$env:package_version-rc$env:APPVEYOR_BUILD_NUMBER"
  # install modules
  - npm install

before_test:
  # Output useful info for debugging.
  - node --version
  - npm --version
  - ruby -v
  - gem -v
  - bundle -v
  - python -V
  - pip3 -V

# Post-install test scripts.
test_script:
  # run tests
  - npm test

# Don't actually build.
build: off
